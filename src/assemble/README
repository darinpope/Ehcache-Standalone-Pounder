This is a small  app that exercises the characteristics of the enterprise
ehcache tiered store, including BigMemory. 


1. GET ENTERPRISE EHCACHE AND LICENSE KEY

You must use a version of Enteprise Ehcache that supports BigMemory in
to use this sample.  You may download an evaluation copy of Enterprise
Ehcache and the license key from terracotta.org:

    http://terracotta.org/bigmemory

2. PREPARE ENVIRONMENT

BigMemory is designed to take advantage of large amounts of RAM without 

3. INSTALL LICENSE KEY

Place your license key file in the same directory from which you run the sample.

4. CONFIGURE



4. RUN THE SAMPLE

Run the sample using the following script:

    run-pounder.sh

You may need to make the script executable:

    chmod u+x run-pounder.sh  

  
  Configuration is done through the config.yml file. All settings are mandatory
  
  storeType: OFFHEAP|DISK|ONHEAP
  threadCount: number of execution threads
  entryCount: Total number of entries to load in the load phase and the number of operations to perform in the read/update phase
  offHeapSize: Amount of ram to dedicate to offheap (NOTE: you also have to have at least that number in the -XX:MaxDirectMemorySize=4g)
  maxOnHeapCount: Count of onHeap cache tier entries. This only helps if you have a hot set a slowly moving hotset that fits in memory. If you don't set this thing to 1024
  batchCount: How often you print the current status and change the entry size for each thread
  maxValueSize: Max size in bytes of the value portion of the entry (a random number is picked bellow this)
  minValueSize: min size in bytes of the value portion of the entry (a random number is picked above this)
  hotSetPercentage: Percentage of time you hit an entry from the onHeap portion of the cache
  rounds: Number of times your execute entryCount operations matching the above config elements
  updatePercentage: Number of times out of 100 that you update an entry instead of reading
  diskStorePath: Location to store the files fore the disk store


For example
-----

storeType: OFFHEAP
threadCount: 33
entryCount: 1000000
offHeapSize: "1G"
maxOnHeapCount: 5000
batchCount: 50000
maxValueSize: 800
minValueSize: 200
hotSetPercentage: 99
rounds: 40
updatePercentage: 10
diskStorePath: /export1/dev

!!IMPORTANT!! the offHeapSize in the config file + the heap size on the java commandline + the memory needed by the OS MUST be less than the physical memory on the machine
